# Render-optimized Dockerfile for Project Management App
FROM node:20-alpine

# Set working directory
WORKDIR /app

# Install dependencies for building
RUN apk add --no-cache git

# Copy package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install backend dependencies
RUN npm ci --only=production

# Install frontend dependencies
RUN cd frontend && npm ci

# Copy source code
COPY . .

# Build frontend for production
RUN cd frontend && npm run build

# Create necessary directories
RUN mkdir -p public/images logs

# Set proper permissions
RUN chown -R node:node /app

# Switch to non-root user
USER node

# Expose port (Render uses PORT environment variable)
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:' + (process.env.PORT || 10000) + '/api/v1/healthcheck', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start the application
CMD ["npm", "start"]
