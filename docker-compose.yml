version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0-jammy
    container_name: projectcamp-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-project-camp}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - projectcamp-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run

  # Backend API Server
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: projectcamp-backend
    restart: unless-stopped
    environment:
      # Server Configuration
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      SERVER_URL: ${SERVER_URL:-http://localhost:3000}
      
      # Database
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-securepassword}@mongodb:27017/${MONGO_DATABASE:-project-camp}?authSource=admin
      
      # JWT Secrets
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      ACCESS_TOKEN_EXPIRY: ${ACCESS_TOKEN_EXPIRY:-15m}
      REFRESH_TOKEN_EXPIRY: ${REFRESH_TOKEN_EXPIRY:-30d}
      
      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      
      # Email Configuration
      MAILTRAP_SMTP_HOST: ${MAILTRAP_SMTP_HOST}
      MAILTRAP_SMTP_PORT: ${MAILTRAP_SMTP_PORT:-2525}
      MAILTRAP_SMTP_USER: ${MAILTRAP_SMTP_USER}
      MAILTRAP_SMTP_PASS: ${MAILTRAP_SMTP_PASS}
      MAILTRAP_SENDER_EMAIL: ${MAILTRAP_SENDER_EMAIL:-noreply@projectcamp.com}
      
      # Password Reset
      FORGOT_PASSWORD_REDIRECT_URL: ${FORGOT_PASSWORD_REDIRECT_URL:-http://localhost:5173/reset-password}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      # Persist uploaded files
      - uploads_data:/app/public/images
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - projectcamp-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/v1/healthcheck', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # MongoDB Express (Optional - for database management UI)
  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: projectcamp-mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-securepassword}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-admin123}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - projectcamp-network
    profiles:
      - tools
  nginx:
    image: nginx:latest
    container_name: projectcamp-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - backend
    networks:
      - projectcamp-network
    profiles:
      - proxy
# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
    name: projectcamp-mongodb-data
  mongodb_config:
    driver: local
    name: projectcamp-mongodb-config
  uploads_data:
    driver: local
    name: projectcamp-uploads

# Custom network
networks:
  projectcamp-network:
    driver: bridge
    name: projectcamp-network

